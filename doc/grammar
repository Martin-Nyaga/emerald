prog             -> expr (newline expr)* newline*
expr             -> def | defn | fn | if | unless | call | terminal
def              -> :def identifier terminal
defn             -> :defn identifier parameters fn_body
fn               -> :fn parameters fn_body
parameters       -> identifier+
fn_body          -> guarded_body | single_line_body | multiline_body
guarded_body     -> newline* when_expr (newline* when_expr | guard_else_expr newline)*
when             -> :when when_condition when_body
guard_else       -> :else when_body
when_condition   -> call | terminal
when_body        -> single_line_body | multiline_body
single_line_body -> :arrow expr
multiline_body   -> :do prog :end
multiline_body_with_possible_else
                 -> :do prog (:else prog)? :end
call             -> identifier_call | symbol_call
identifier_call  -> identifier args
symbol_call      -> symbol symbol_callable_expr
symbol_callable_expr
                 -> identifier | hashmap | parenthesized
args             -> terminal (terminal)*
if               -> :if (terminal | call) (single_line_body | multiline_body_with_possible_else)
unless           -> :unless (terminal | call) (single_line_body | multiline_body_with_possible_else)
terminal         -> identifier | integer | boolean | nil | parenthesized | array | hashmap | string | symbol | constant
identifier       -> :identifier
boolean          -> :true | :false
string           -> :string
symbol           -> :symbol
constant         -> :constant
nil              -> :nil
newline          -> :newline
parenthesized    -> :left_paren call :right_paren
array            -> :left_bracket terminal* right_bracket
hashmap          -> :left_brace (terminal terminal)* right_brace
